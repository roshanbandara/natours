/*$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;
*/
/*
0 - 600PX: Phone
600 - 900px: Tablet portrait
900 - 1200px: Tablet landscape
[1200 - 1800px]: is where our normal styles apply
1800px + :big desktop
*/
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.5%;
  /*
     @media only screen and (max-width: $bp-largest) {
		font-size: 50%; // 10px/16px = 62.5% -> 1rem = 8px here base font size is 8px ((10/62.5%) * 50% = 8 ) I want 15px here, so my logic is as here, if base font 8, my required font is 15, then base font is 10 ? ((15/8)*10 = 18.75)
     }
     
     @media only screen and (max-width: $bp-medium) {
		font-size: 40%; // 10px/16px = 62.5% -> 1rem = 6.4px here base font size is 8px ((10/62.5%) * 40% = 6.4 )
     }*/
  /*
     @media only screen and (max-width: $bp-small) {
		font-size: 35%; 
     }*/
  /* 
     @include respond(tab-land) { //width < 1200?
          font-size: 56.25%; //1 rem = 9px, 9/16 = 50%
     }
   
     @include respond(tab-port) { //width < 900?
          font-size: 50%; //1 rem = 8px, 8/16 = 50%
     }
   
     @include respond(big-desktop) {
          font-size: 75%; //1rem = 12, 12/16
     }*/ }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 56.25%; } }
  @media only screen and (max-width: 56.25em) {
    html {
      font-size: 50%; } }
  @media only screen and (min-width: 112.5em) {
    html {
      font-size: 75%; } }

body {
  font-family: "Lato", sans-serif;
  color: #676767;
  font-weight: 400;
  line-height: 1.7;
  letter-spacing: .05rem;
  text-rendering: optimizeLegibility;
  /*  
     @include respond(tab-port) { 
          padding: 0;
     }*/ }

section {
  padding: 0 0 8rem 0;
  /*
     @media only screen and (max-width: $bp-large) {
		padding: 0 0 8rem 0;
	}*/ }

.container {
  display: grid;
  grid-template-rows: 100vh repeat(9, min-content);
  grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; }
  @media only screen and (max-width: 75em) {
    .container {
      grid-template-columns: [full-start] minmax(2rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(2rem, 1fr) [full-end]; } }

/* roshan scroll-snap test*/
.scroll-snap {
  grid-column: full-start / full-end; }

.scroll-snap-test {
  display: flex;
  overflow-x: auto;
  overscroll-behavior-x: contain;
  scroll-snap-type: x mandatory; }
  .scroll-snap-test img {
    height: 25rem;
    width: auto;
    scroll-snap-align: center; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  /* gradient */
  /* this also used on the "section-features" icon fonts exactly same as this */
  display: inline-block;
  background-image: linear-gradient(to right, #A5D6A7, #388E3C);
  -webkit-background-clip: text;
  /* this clip the background image(background gradient here) exactly*/
  color: transparent;
  /* then make text color transparent, then can visible the gradient text */
  /* gradient end */
  letter-spacing: .2rem;
  transition: all .2s;
  /*
     @include respond(tab-port) {
       font-size: 3rem;
       text-align: center; //Roshan
     }
   
     @include respond(phone) {
       font-size: 2.5rem;
     }*/ }
  @media only screen and (max-width: 56.25em) {
    .heading-secondary {
      font-size: 3rem; } }
  @media only screen and (max-width: 37.5em) {
    .heading-secondary {
      font-size: 2.5rem;
      display: block;
      text-align: center; } }
  .heading-secondary:hover {
    transform: skewY(2deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem;
  margin-bottom: 3rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

/*.header {     
     position: relative; */
/*
   @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
     -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
     clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); 
     height: 95vh;
   }*/
/*@media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), 
          only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), //safari doesn't support to the this part "min-resolution: 192dpi" so we add this line 
          only screen and (min-width: 125em) {
       background-image: linear-gradient(
       to right bottom, 
       rgba($color-secondary-light, 0.6), 
       rgba($color-secondary-dark, 0.6)), 
       url(../img/hero.jpg);
   }
   
     @include respond(phone) {
       -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
       clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
     }
   */
/*  &__logo-box {
     position: absolute; //relative to the "header" so we put "position: relative;" on header 
     top: 4rem;
     left: 4rem;
     }
   
     &__logo {
     height: 3.5rem;
     }
   // 4 end
   
   // 6
     &__text-box {
     position: absolute;
     top: 40%;
     left: 50%;
     transform: translate(-50%, -50%);
     text-align: center; //to align the button to center, as it is a text can use this simple text align property
     }
}
   // 6 end
*/
.header {
  grid-column: full-start / full-end;
  background-image: linear-gradient(to top, rgba(96, 131, 108, 0.7), rgba(56, 142, 60, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: bottom center;
  background-attachment: fixed;
  /* 
     -webkit-clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
     clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%); // https://bennettfeely.com/clippy/ */
  /*   @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
          -webkit-clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);  // https://bennettfeely.com/clippy/ 
          // height: 95vh; // I removed this
     }*/
  display: grid;
  grid-template-rows: min-content 1fr; }
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em), only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), only screen and (min-width: 125em) {
    .header {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.6), rgba(255, 119, 48, 0.6)), url(../img/hero.jpg); } }
  @media only screen and (max-width: 37.5em) {
    .header {
      /*
          -webkit-clip-path: polygon(0 0, 100% 0, 100% 100vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 100vh, 0 100%);*/
      grid-template-rows: 1fr min-content;
      background-image: linear-gradient(to top, rgba(96, 131, 108, 0.7), rgba(56, 142, 60, 0.8)), url(../img/hero.jpg); } }

/*nav============================================================================================================================*/
.top-nav {
  display: grid;
  grid-template-columns: min-content 1fr;
  /*
     .wrapper { Get this from stackoverflow, to make a border around the nave item. there are few but this shadow effect was perfect - https://stackoverflow.com/questions/47882924/preventing-double-borders-in-css-grid
          display: grid;
          grid-template-columns: 50px 50px 50px 50px;
          grid-column-gap: 1px;
          grid-row-gap: 1px;
          }
          .wrapper > div {
          padding: 15px;
          text-align: center;
          box-shadow: 0 0 0 1px;
          }
     */ }
  @media only screen and (max-width: 37.5em) {
    .top-nav {
      grid-template-columns: 1fr;
      grid-template-rows: min-content 1fr;
      height: auto; } }
  .top-nav__logo-box {
    align-self: center; }
    @media only screen and (max-width: 37.5em) {
      .top-nav__logo-box {
        justify-self: center;
        align-self: center; } }
  .top-nav__logo {
    box-sizing: content-box;
    padding: 1rem 0;
    margin-left: 5vw;
    height: 5rem;
    width: auto; }
    @media only screen and (max-width: 62.5em) {
      .top-nav__logo {
        margin-left: 1rem;
        height: 8rem; } }
    @media only screen and (max-width: 37.5em) {
      .top-nav__logo {
        margin-top: 0;
        margin-left: 0;
        align-self: center; } }
  .top-nav__links {
    margin-right: 5vw;
    display: grid;
    grid-template-columns: repeat(6, max-content);
    grid-column-gap: 3vw;
    justify-content: end;
    align-content: center;
    list-style: none;
    /*to remove bullets*/ }
    @media only screen and (max-width: 62.5em) {
      .top-nav__links {
        margin-right: 1rem; } }
    @media only screen and (max-width: 37.5em) {
      .top-nav__links {
        margin-top: 0;
        margin-right: 0;
        grid-row: 1 / 2; } }
    @media only screen and (max-width: 37.5em) {
      .top-nav__links {
        grid-template-columns: repeat(3, 1fr);
        grid-row-gap: 1px;
        grid-column-gap: 1px; } }
  @media only screen and (max-width: 37.5em) {
    .top-nav__links > div {
      box-shadow: 0 0 0 1px #f7f7f7; } }
  .top-nav__link a:link,
  .top-nav__link a:visited {
    color: #fff;
    text-decoration: none;
    /*remove underline*/
    text-transform: uppercase;
    font-size: 1.4rem;
    font-weight: 600;
    letter-spacing: .15rem;
    border-bottom: 3px solid transparent;
    /*^^look at the 'hover' and 'active' states below*/
    transition: border-bottom 0.2s;
    /* we add a transition animation as we did on buttons*/
    padding: 1.4rem 0;
    /* space between the line and the text */ }
    @media only screen and (max-width: 37.5em) {
      .top-nav__link a:link,
      .top-nav__link a:visited {
        font-size: 1.15rem; } }
  .top-nav__link a:hover,
  .top-nav__link a:active {
    border-bottom: 3px solid #4CAF50;
    /* ^^ In order for this to happen we need this border to exsist before we actualy hover it but since we dont want to see it, we make it transparent */ }
  .top-nav__link-box a {
    display: flex;
    align-items: center;
    text-align: center;
    font-size: 1.8rem;
    color: #fff;
    /* fontawesome icons - removed after adding svgs
               i {
               padding-right: .75rem;
               font-size: 1.8rem;
               align-self: center;

               @media only screen and (max-width: $bp-medium) {
                    padding-right: 0;
                    padding-bottom: .3rem;
               }
          }  */ }
    @media only screen and (max-width: 56.25em) {
      .top-nav__link-box a {
        flex-direction: column; } }
    @media only screen and (max-width: 37.5em) {
      .top-nav__link-box a {
        padding: 1rem; } }
  .top-nav .fa {
    display: block;
    height: 20px;
    width: 20px;
    margin-right: .5rem;
    fill: #fff; }
    @media only screen and (max-width: 56.25em) {
      .top-nav .fa {
        margin-right: 0;
        padding-bottom: .3rem; } }

.fa {
  height: 25px;
  width: 25px;
  fill: #388E3C; }

/*sticky nav*/
.sticky {
  grid-template-rows: min-content;
  position: fixed;
  width: 100%;
  -webkit-box-shadow: 0 -8px 10px rgba(0, 0, 0, 0.14), 0 4px 8px rgba(0, 0, 0, 0.28);
  /* roshan - for botton nav */
  box-shadow: 0 -8px 10px rgba(0, 0, 0, 0.14), 0 4px 8px rgba(0, 0, 0, 0.28);
  transition: transform 3s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 5000;
  /*
     @media only screen and (max-width: $bp-medium) { //roshan - may be not nessery        
          min-height: auto; // )))))))
     }  */ }

/*backdrop filter==============================================================================================================*/
@supports (backdrop-filter: none) {
  .sticky {
    background-color: rgba(255, 255, 255, 0.85);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px); } }

@supports not (backdrop-filter: none) {
  .sticky {
    background-color: rgba(255, 255, 255, 0.97); } }

/*backdrop filter==============================================================================================================*/
.top-nav__logo-black {
  display: none; }

.sticky .top-nav__logo-black {
  box-sizing: content-box;
  padding: .4rem 0;
  margin-left: 5vw;
  height: 5rem;
  width: auto;
  display: block; }
  @media only screen and (max-width: 37.5em) {
    .sticky .top-nav__logo-black {
      display: none; } }

.sticky .top-nav__logo {
  display: none; }

.sticky div a:link,
.sticky div a:visited {
  color: #676767;
  padding: 1.2rem 0;
  /* space between the line and the text */ }
  @media only screen and (max-width: 37.5em) {
    .sticky div a:link,
    .sticky div a:visited {
      padding: 1.5rem 0; } }

.sticky .fa {
  fill: #676767; }
  @media only screen and (max-width: 37.5em) {
    .sticky .fa {
      height: 30px;
      width: 30px; } }

.sticky .top-nav__link-box {
  color: #676767; }

@media only screen and (max-width: 37.5em) {
  .sticky .link-text {
    display: none; } }

.sticky .top-nav__links {
  align-content: end; }
  @media only screen and (max-width: 37.5em) {
    .sticky .top-nav__links {
      grid-template-columns: repeat(6, 1fr);
      grid-row-gap: 0; } }

@media only screen and (max-width: 37.5em) {
  .sticky .top-nav__links > div {
    box-shadow: 1px 0 0 0 #c7c7c7; } }

@media only screen and (max-width: 37.5em) {
  .sticky .top-nav__link-box a i {
    font-size: 2.8rem;
    padding-bottom: 0; } }

@media only screen and (max-width: 37.5em) {
  .sticky .top-nav__logo-box {
    display: none; } }

/*nav end============================================================================================================================*/
.main-heading {
  align-self: center;
  justify-self: center;
  display: flex;
  flex-direction: column;
  align-items: center; }
  @media only screen and (max-width: 37.5em) {
    .main-heading {
      justify-content: flex-end;
      margin: 0 7.5vw 18.5vw;
      text-align: center; } }
  @media only screen and (max-width: 37.5em) {
    .main-heading .btn {
      padding: 1.6rem 2rem;
      text-align: center; } }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* to fix the shaking issue at the end of the animation. so we use this property for entire heading */
  margin-bottom: 6rem;
  /* space between the h1 and the button */ }
  .heading-primary--main {
    display: block;
    /* to create a linebreak between the "main" & "sub"*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    /* 01.two essential properties to animation workwith. */
    animation-duration: 1s;
    /* 02 */
    animation-timing-function: ease-out;
    /*for shorter virsion of these three properties look at below "&--sub" */
    /*  animation-delay: 3s;  */
    /* delay before the animation begins*/
    /*  animation-iteration-count: 3; */
    /*how many times animation occurs*/
    /*
          @include respond(phone) {
          letter-spacing: 1rem;
          font-family: 5rem;
          }*/ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--main {
        letter-spacing: .75rem;
        font-size: 4.5rem; } }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
    /*
          @include respond(phone) {
          letter-spacing: .5rem;
          }*/ }
    @media only screen and (max-width: 37.5em) {
      .heading-primary--sub {
        letter-spacing: .5rem; } }

.start {
  background-color: #eee;
  grid-column: full-start / full-end;
  padding: 25rem 2rem; }
  @media only screen and (max-width: 56.25em) {
    .start {
      padding: 7.5rem 2rem 20rem; } }

.section-about__content {
  max-width: 114rem;
  margin: 5rem auto 0;
  display: flex;
  flex-wrap: wrap;
  width: 100%; }

.section-about__text, .section-about__img {
  flex: 0 1 50%; }

@media only screen and (max-width: 56.25em) {
  .section-about__text, .section-about__img {
    flex: 0 1 100%; } }

.section-about__text {
  padding-right: 2.5rem; }
  @media only screen and (max-width: 56.25em) {
    .section-about__text {
      padding-right: 0;
      padding-bottom: 8rem; } }

.section-about__img {
  padding-left: 2.5rem; }

.composition {
  position: relative;
  /* ((( */ }
  @media only screen and (max-width: 56.25em) {
    .composition {
      display: flex; } }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem;
    /*
		@include respond(tab-port) {
			float: left;
			position: relative; // we use position relative here to get rid of position absolute above 
			width: 33.333333333%;
			box-shadow: 0 1.5rem 3rem rgba($color-black, .2);
		}*/ }
    @media only screen and (max-width: 56.25em) {
      .composition__photo {
        width: 100%;
        position: relative;
        flex: 0 1 31.5%;
        box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2); } }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p1 {
          top: 1rem;
          transform: scale(1.2); } }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p2 {
          top: -1rem;
          transform: scale(1.3);
          z-index: 100; } }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
      @media only screen and (max-width: 56.25em) {
        .composition__photo--p3 {
          top: 1rem;
          left: 0;
          transform: scale(1.2); } }
    .composition__photo:hover {
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20;
      /* %%% */ }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95);
    /* slightly scale down the other images when hovering on an image*/ }

.section-features {
  background-color: red;
  grid-column: full-start / full-end;
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(165, 214, 167, 0.6), rgba(56, 142, 60, 0.6)), url(../img/nat-4.jpg);
  background-size: cover;
  display: flex;
  justify-content: center;
  transform: skewY(-7deg);
  margin-top: -10rem;
  /*
	@include respond(tab-port) {
		padding: 10rem 0;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .section-features {
      padding: 10rem 0; } }
  .section-features .row {
    max-width: 114rem;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: 100%;
    /*
          .col-1-of-4:not(:last-child) { //[padding] - and can acheive this by reducing the percentage value of items above [oooooo]
               margin-right: 2rem;
          }*/ }
    @media only screen and (max-width: 56.25em) {
      .section-features .row {
        width: 90%; } }
    .section-features .row .col-1-of-4 {
      flex: 0 1 21%; }
      @media only screen and (max-width: 56.25em) {
        .section-features .row .col-1-of-4 {
          flex: 0 1 45%;
          padding-bottom: 2rem; } }
      @media only screen and (max-width: 37.5em) {
        .section-features .row .col-1-of-4 {
          flex: 0 1 100%;
          padding-bottom: 2rem; } }
  .section-features > * {
    transform: skewY(7deg); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s;
  /* ### */
  /*
	@include respond(tab-port) {
		padding: 2rem;
	}
*/
  /* &__text { 
		// here no need to specify font size because we have declared the in the "feature-box" as 1.5rem, it inherits ^^^^
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .feature-box {
      padding: 2rem; } }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #A5D6A7, #388E3C);
    -webkit-background-clip: text;
    color: transparent;
    /*
		@include respond(tab-port) {
			margin-bottom: 0;
		}*/ }
    @media only screen and (max-width: 56.25em) {
      .feature-box__icon {
        margin-bottom: 0; } }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03);
    /* ### */ }

.section-tours {
  margin-top: 10rem;
  grid-column: center-start / center-end;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem;
  /*
	@include respond(tab-port) {
		padding: 20rem 0 10rem 0;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .section-tours {
      padding: 20rem 0 10rem 0; } }
  .section-tours .row {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: 100%; }
    .section-tours .row .col-1-of-3 {
      flex: 0 1 30%; }
      @media only screen and (max-width: 56.25em) {
        .section-tours .row .col-1-of-3 {
          flex: 0 1 47%;
          margin-bottom: 3rem; } }
      @media only screen and (max-width: 37.5em) {
        .section-tours .row .col-1-of-3 {
          flex: 0 1 100%;
          margin-bottom: 3rem; } }
    @media only screen and (max-width: 56.25em) {
      .section-tours .row {
        justify-content: center; } }
    @media only screen and (max-width: 56.25em) {
      .section-tours .row .col-1-of-3:first-child {
        margin-right: 3rem; } }
    @media only screen and (max-width: 37.5em) {
      .section-tours .row .col-1-of-3:first-child {
        margin-right: 0; } }

.card {
  perspective: 150rem;
  /* when rotating someting it comes towards the user and goes. To get this effect we use the "perspective" with a high value. with a small value it goes wired. perspective also add to the parent element of the rotated item. */
  -moz-perspective: 150rem;
  position: relative;
  /*@@@*/
  /*&&&*/
  height: 52rem; }
  .card__side {
    height: 52rem;
    transition: all 1s ease;
    /*$$$*/
    position: absolute;
    /*@@@*/
    top: 0;
    left: 0;
    width: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    /* when rotating we can see the backpart of the card. to hide it we use "hidden" value of backface-visibility */
    border-radius: 3px;
    overflow: hidden;
    /* --- */
    /*===*/
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg);
      /*$$$*/ }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #A5D6A7, #388E3C); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: soft-light;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    /*overflow hidden doesn't work affter adding the clip-path so we added the rounded corners manualy. */
    /*===*/
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
      /* +++ */ }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #A5D6A7, #388E3C), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: #fff;
    position: absolute;
    text-align: right;
    top: 12rem;
    right: 2rem;
    width: 68%; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    /*as the element is one line of text padding doesn't apply correctly. for both lines. so we use this */
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(165, 214, 167, 0.85), rgba(56, 142, 60, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 1rem 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          /* separation borders except for last one */
          border-bottom: 1px solid #eee; }
  .card__side--back {
    display: grid;
    align-content: center;
    justify-content: center; }
  .card__cta {
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    .card {
      height: auto;
      /*before we make height 52rem, because it needs to be back side and front to be the same */
      border-radius: 3px;
      background-color: #fff;
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
      .card__side {
        height: auto;
        /*before we make height 52rem, because it needs to be back side and front to be the same */
        position: relative;
        box-shadow: none; }
        .card__side--back {
          transform: rotateY(0);
          clip-path: polygon(0 15%, 100% 0, 100% 100%, 0% 100%); }
      .card:hover .card__side--front {
        transform: rotateY(0); }
      .card__details {
        padding: 1rem 3rem; }
      .card__cta {
        position: relative;
        top: 0;
        left: 0;
        transform: translate(0);
        width: 100%;
        padding: 7rem 4rem 4rem 4rem; }
      .card__price-box {
        margin-bottom: 3rem; }
      .card__price-value {
        font-size: 4rem; } }

.section-stories {
  grid-column: full-start / full-end;
  position: relative;
  /* bg-video" position is absolute*/
  padding: 15rem 0;
  /*
	@include respond(tab-port) {
		padding: 10rem 0;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .section-stories {
      padding: 10rem 0; } }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /* skew the story */
  /*
	@include respond(tab-port) {
		width: 100%;
		padding: 4rem;
		padding-left: 7rem;

	}*/
  /*
	@include respond(phone) {
		transform: skewX(0);
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .story {
      width: 85%;
      padding: 4rem;
      padding-left: 7rem; } }
  @media only screen and (max-width: 37.5em) {
    .story {
      transform: skewX(0); } }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    transform: translateX(-3rem) skewX(12deg);
    position: relative;
    overflow: hidden;
    border-radius: 50%;
    /*
		@include respond(phone) {
			transform: translateX(-3rem) skewX(0);
	}*/ }
    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
      .story__shape {
        -webkit-clip-path: circle(50% at 50% 50%);
        clip-path: circle(50% at 50% 50%);
        -webkit-shape-outside: circle(50% at 50% 50%);
        shape-outside: circle(50% at 50% 50%);
        border-radius: none; } }
    @media only screen and (max-width: 37.5em) {
      .story__shape {
        transform: translateX(-3rem) skewX(0); } }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.4);
    /* make the image center*/
    backface-visibility: hidden;
    /* to fix the wired thing after adding the above transform property*/
    transition: all .5s;
    /* transition for hover effect */ }
  .story__text {
    transform: skewX(12deg);
    /* here this "skewx is for correct the skewed image */
    /*
		@include respond(phone) {
			transform: skewX(0);

	}*/ }
    @media only screen and (max-width: 37.5em) {
      .story__text {
        transform: skewX(0); } }
  .story__caption {
    /*position: absolute; // }}} //
		top: 50%;
		left: 50%;
		transform: translate(-50%, 20%);*/
    display: flex;
    justify-content: center;
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    /* [[[ */ }
  .story:hover .story__caption {
    opacity: 1;
    transform: translateY(-108px); }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%); }

/*backdrop filter==============================================================================================================*/
@supports (backdrop-filter: none) {
  .story {
    background-color: rgba(255, 255, 255, 0.5);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px); } }

@supports not (backdrop-filter: none) {
  .story {
    background-color: rgba(255, 255, 255, 0.9); } }

/*backdrop filter==============================================================================================================*/
.bg-video {
  position: absolute;
  /* section-stories" position is relative*/
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .50;
  overflow: hidden;
  /*added this to clip the image to the border of the entire body */ }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover;
    /* this is pretty similar to "background-size:  cover" used in images. this fill the entire area mataining it's apect ratio*/ }

.section-book {
  background-color: royalblue;
  grid-column: full-start / full-end; }

.section-book {
  padding: 15rem 0;
  background-image: linear-gradient(to left top, #A5D6A7, #388E3C);
  /*
	@include respond(tab-port) {
		padding: 10rem 0;
	}*/
  /*
	@include respond(phone) {
		text-align: center;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .section-book {
      padding: 10rem 0; } }

.book {
  max-width: 114rem;
  margin: 0 auto;
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(../img/nat-10.jpg);
  background-size: 100%;
  /* this 100% is similar to the value "cover" */
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.2);
  /*
	@include respond(tab-land) {
		background-image: linear-gradient(105deg, rgba($color-white, .9) 0%, rgba($color-white, .9) 65%, transparent 65%), url(../img/nat-10.jpg);
		 background-size: cover;
	}*/
  /*	@include respond(tab-port) {
		background-image: linear-gradient(to right, rgba($color-white, .9) 0%, rgba($color-white, .9) 100%), url(../img/nat-10.jpg);
		 background-size: cover;
	}*/ }
  @media only screen and (max-width: 75em) {
    .book {
      background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 65%, transparent 65%), url(../img/nat-10.jpg);
      background-size: cover; } }
  @media only screen and (max-width: 62.5em) {
    .book {
      width: 90%; } }
  @media only screen and (max-width: 56.25em) {
    .book {
      background-image: linear-gradient(to right, rgba(255, 255, 255, 0.75) 0%, rgba(255, 255, 255, 0.75) 100%), url(../img/nat-10.jpg);
      background-size: cover; } }
  .book__form {
    width: 50%;
    padding: 6rem 3rem;
    /*
		@include respond(tab-land) {
			width: 65%;
		}*/
    /*	@include respond(tab-port) {
			width: 100%;
		}*/ }
    @media only screen and (max-width: 75em) {
      .book__form {
        width: 65%; } }
    @media only screen and (max-width: 56.25em) {
      .book__form {
        width: 100%; } }

.form {
  /*&__group:first-child {
		margin-bottom: 2rem;
	}*/ }
  .form .inputWithIcon input {
    padding-left: 5.5rem; }
  .form .inputWithIcon {
    position: relative; }
  .form .inputWithIcon div {
    position: absolute;
    left: 1rem;
    top: .3rem;
    padding: 0 .8rem;
    color: #969696;
    transition: 0.3s;
    font-size: 2.5rem; }
  .form .inputWithIcon input:focus + div {
    color: black; }
  .form__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 12rem;
    background-color: rgba(255, 255, 255, 0.75);
    border: none;
    border-bottom: 3px solid transparent;
    /* &&& */
    width: 90%;
    display: block;
    transition: all .3s;
    /* border-botton animation */
    box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2);
    /*
		@include respond(tab-port) {
			width: 100%;

		}*/ }
    @media only screen and (max-width: 56.25em) {
      .form__input {
        width: 100%; } }
    .form__input:focus {
      outline: none;
      /*remove the blue outline of the boxes*/
      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
      border-bottom: 3px solid #4CAF50;
      /* &&& */
      /* also added this to the initial state. because when add the border it moves down a bit the entire box*/ }
    .form__input:focus:invalid {
      /* if the user enterd data to the fields are invalied, it gets the botton border dark */
      border-bottom: 3px solid #ff7730; }
    .form__input::-webkit-input-placeholder {
      /* set the place holder text color.*/
      color: #999; }
  .form__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 5.6rem;
    display: block;
    transition: all .3s;
    /* OOO */ }
  .form__input:placeholder-shown + .form__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem); }
  .form__radio-group {
    width: 49%;
    display: inline-block;
    /* to display the radio buttons side by side*/
    /*
		@include respond(tab-port) {
			width: 100%;
			margin-bottom: 2rem;
		}*/ }
    @media only screen and (max-width: 37.5em) {
      .form__radio-group {
        width: 100%;
        margin-bottom: 2rem; } }
  .form__radio-input {
    display: none; }
  .form__radio-label {
    font-size: 1.6rem;
    cursor: pointer;
    position: relative;
    /* %%% */
    padding-left: 4.5rem; }
  .form__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid #4CAF50;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;
    display: flex;
    justify-content: center;
    align-items: center; }
    .form__radio-button::after {
      content: "";
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      background-color: #4CAF50;
      opacity: 0;
      transition: opacity .2s;
      /* radio button's middle circle animation when clicking*/ }
  .form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
    opacity: 1; }
  @media only screen and (max-width: 37.5em) {
    .form .btn--green {
      width: 100%; } }

.footer {
  background-color: brown;
  grid-column: full-start / full-end; }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7;
  /*
	@include respond(tab-port) {
		padding: 8rem 0;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .footer {
      padding: 8rem 0; } }
  .footer .footer-row {
    max-width: 114rem;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: 100%; }
    .footer .footer-row .col-1-of-2 {
      flex: 0 1 50%;
      /*
               @media only screen and (max-width: $bp-small) {
                    flex: 0 1 100%;
               }*/ }
      @media only screen and (max-width: 56.25em) {
        .footer .footer-row .col-1-of-2 {
          flex: 0 1 100%; } }
    @media only screen and (max-width: 56.25em) {
      .footer .footer-row {
        justify-content: center;
        width: 90%; } }
    .footer .footer-row .col-1-of-2:last-child {
      display: flex;
      justify-content: flex-end; }
      @media only screen and (max-width: 56.25em) {
        .footer .footer-row .col-1-of-2:last-child {
          justify-content: center;
          text-align: center; } }
    @media only screen and (max-width: 56.25em) {
      .footer .footer-row .col-1-of-2:first-child {
        margin-bottom: 5rem; } }
  .footer__logo-box {
    text-align: center;
    /*inline elements behave like text, so we can center the item like this */
    margin-bottom: 8rem;
    /*
		@include respond(tab-port) {
			margin-bottom: 6rem;
		}*/ }
    @media only screen and (max-width: 56.25em) {
      .footer__logo-box {
        margin-bottom: 6rem; } }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 90%;
    /*
		@include respond(tab-port) {
			width: 100%;
			text-align: center;
		}*/ }
    @media only screen and (max-width: 56.25em) {
      .footer__navigation {
        width: 100%;
        text-align: center; } }
  .footer__list {
    list-style: none;
    display: flex;
    justify-content: space-between;
    width: 100%; }
    @media only screen and (max-width: 37.5em) {
      .footer__list {
        justify-content: center;
        flex-wrap: wrap; } }
  @media only screen and (max-width: 37.5em) {
    .footer__item {
      min-width: 12rem;
      line-height: 3; } }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #4CAF50;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    padding-top: 2rem;
    width: 90%;
    /*
		@include respond(tab-port) {
			width: 100%;
			float: none;
		}*/ }

@keyframes moveInLeft {
  /* for browser performance we animate only two properties, "opacity & transform" */
  0% {
    opacity: 0;
    /*at first we want the object invisible */
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem);
    /* there are two properties required to animation work. look at the "typography" file*/ }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn, .btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 3rem;
  border-radius: 10rem;
  /*to make the button round */
  transition: all .2s;
  position: relative;
  /* to align the ::after psudo button */
  font-size: 1.6rem;
  font-weight: 700;
  letter-spacing: .25rem;
  line-height: 1.2;
  border: none;
  cursor: pointer; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active, .btn:focus {
  outline: none;
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn--green {
  background-color: #4CAF50;
  color: #fff; }
  .btn--green::after {
    background-color: #4CAF50; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom .4s ease-out .75s;
  /*.75s is the animatino delay */
  animation-fill-mode: backwards;
  /* we could see button is visible before the animation start, to fix this we use this. this automaticaly adds the styles of 0% that is on the @keyframe before the animation start */ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #4CAF50;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #4CAF50;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #4CAF50;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

/*
   .header__text-box {
        backface-visibility: hidden;
   }*/
.u-center-text {
  text-align: center !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important;
  /*
	@include respond(tab-port) {
		margin-bottom: 3rem !important;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-medium {
      margin-bottom: 3rem !important; } }

.u-margin-bottom-big {
  margin-bottom: 8rem !important;
  /*
	@include respond(tab-port) {
		margin-bottom: 5rem !important;
	}*/ }
  @media only screen and (max-width: 56.25em) {
    .u-margin-bottom-big {
      margin-bottom: 5rem !important; } }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

/*
0 - 600PX: Phone
600 - 900px: Tablet portrait
900 - 1200px: Tablet landscape
[1200 - 1800px]: is where our normal styles apply
1800px + :big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > componets

1em = 16px
*/
.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.8);
  z-index: 4000;
  opacity: 0;
  visibility: hidden;
  transition: all .3s;
  /*
	//roshan popup make responsive by me
	@include respond(tab-land) {
		&__content {
			//@include absCenter; // here we added mixin for center the content 
			position: relative;
			width: 70%;
			display: inline-block;
		}

		&__left {
			width: 100%;
		}
	
		&__right {
			width: 100%; // for the other content 
			display: block;
			padding: 1.5rem 2.5rem;
		}
	
		&__img1 {
			width: 51%;
			float: left;
		}

		&__img2 {
			width: 49%;
			float: left;
		}
	}

	@include respond(tab-port) {
		&__content {
			//@include absCenter; // here we added mixin for center the content 
			max-height: 90vh;
			width: 50%;
			overflow: auto;
		}

		&__img {
			width: 100%;
			float: left;
		}

		&__text {
			-moz-column-count: 1;
			column-count: 1;
		}
	}	

	@include respond(phone) {
		&__content {
			//@include absCenter; // here we added mixin for center the content 
			position: relative;
			width: 85%;
			display: inline-block;
		}

		&__text {
			-moz-column-count: 2;
			column-count: 2;
		}
	}	
	//roshan popup make responsive by me end  //

*/ }
  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    .popup {
      -webkit-backdrop-filter: blur(10px);
      backdrop-filter: blur(10px);
      background-color: rgba(0, 0, 0, 0.2); } }
  .popup__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 75%;
    background-color: #fff;
    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);
    border-radius: 3px;
    display: table;
    overflow: hidden;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.25);
    transition: all .5s .2s;
    display: flex;
    justify-content: space-between;
    align-items: center; }
  .popup__left {
    max-width: 31%;
    /*width: 33.3333333%; // for images 
		display: table-cell; // ### //we can use the float: left here, but there is a small problem so we use table property */ }
  .popup__right {
    max-width: 65%;
    /*width: 66.666667%; // for the other content 
		display: table-cell; // ### //
		vertical-align: middle;
          padding: 3rem 5rem;*/
    padding: 3rem 5rem 3rem 0; }
  .popup__img {
    display: block;
    width: 100%; }
  .popup__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid #eee;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid #eee;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto; }
  .popup:target {
    opacity: 1;
    /*)))*/
    visibility: visible;
    /*)))*/ }
  .popup:target .popup__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1); }
  .popup__close:link, .popup__close:visited {
    color: #777;
    position: absolute;
    top: 2.5rem;
    right: 2.5rem;
    font-size: 3rem;
    text-decoration: none;
    display: inline-block;
    transition: all .2s;
    line-height: 1; }
  .popup__close:hover {
    color: #4CAF50; }
